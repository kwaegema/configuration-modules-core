# ${license-info}
# ${developer-info}
# ${author-info}


=head1 NAME

The I<ccm> component manages the configuration file
for CCM.

=head1 DESCRIPTION

The I<ccm> component manages the configuration file for the CCM
daemon.  This is usually the /etc/ccm.conf file. See the ccm-fetch
manpage for more details.

=head1 RESOURCES

=over

=item * C<< configFile : string >>

The location of the configuration file.  Normally this should not be
changed. Defaults to C<< /etc/ccm.conf >>.

=item * C<< profile : type_hostURI >>

The URL for the machine's profile.  You can use either the http or
https protocols (the file protocol is also possible eg. for tests).
(see ccm-fetch manpage)

=item * C<< profile_failover ? type_hostURI >>

profile failover URL in case the above is not working (see ccm-fetch manpage)

=item * C<< context ? type_hostURI >>

Unsupported. May be removed in a future release.

=item * C<< debug : long(0..1) >>

Turn on debugging.  Takes either 0 or 1.  Defaults to 0.

=item * C<< force : long(0..1) >>

Force fetching of the machine profile.  Turning this on ignores the
modification times.  Takes either 0 or 1.  Defaults to 0.

=item * C<< preprocessor ? string >>

Preprocessor executable which combines the profile and context.
Currently not used.

=item * C<< cache_root : string >>

The root directory of the CCM cache.  Defaults to C<< /var/lib/ccm >>.

=item * C<< get_timeout : long(0..) >>

The timeout for the download operation in seconds.  Defaults to 30.

=item * C<< lock_retries : long(0..) >>

Number of times to try to get the lock on the cache.  Defaults to 3.

=item * C<< lock_wait : long(0..) >>

Number of seconds to wait between attempts to acquire the lock.  Defaults to 30.

=item * C<< retrieve_retries : long(0..) >>

Number of times to try to get the context from the server.  Defaults to 3.

=item * C<< retrieve_wait : long(0..) >>

Number of seconds to wait between attempts to get the context from the
server.  Defaults to 30.

=item * C<< cert_file ? string >>

The certificate file to use for an https protocol.

=item * C<< key_file ? string >>

The key file to use for an https protocol.

=item * C<< ca_file ? string >>

The CA file to use for an https protocol.

=item * C<< ca_dir ? string >>

The directory containing accepted CA certificates when using the https
protocol.

=item * C<< world_readable : long(0..1) >>

Whether the profiles should be world-readable.  This takes either a 0
or 1.  Defaults to 0.

=item * C<< base_url ? type_absoluteURI >>

If C<< profile >> is not a URL, a profile url will be calculated from
C<< base_url >> and the local hostname.

=item * C<< dbformat ? string >>

Format of the local database, must be C<< DB_File >>, C<< CDB_File >> or C<< GDBM_File >>.
If not specified, the component will default to C<< GDBM_File >>.

=back

=cut
